#!/usr/bin/env python
# -*- coding: iso-8859-1 -*-
# This file is part of RSA.py testsuite.

"""Tests for our implementation of RSA applied to integers."""
import pytest
import RSA
from tests.pyrsa_testlib import with_params, without_duplicates, \
                                pytest_generate_tests


@with_params([
    # Stolen from http://en.wikipedia.org/wiki/RSA#A_worked_example
    dict(
        n = 3233,
        p = 61,
        q = 53,
        e = 17,
        d = 2753,
        plain = 65,
        cypher = 2790,
    ),
    # Generated by http://people.eku.edu/styere/Encrypt/RSAdemo.html
    dict(
        n = 77028186510125710835232907121,
        p = 459983137786273,
        q = 167458717901777,
        e = 17,
        d = 45310697947132401996104246513,
        plain = 57128184570925880835232907122,
        cypher = 6764407817379484644525719120,
    ),
])
def test_sample(n, p, q, e, d, plain, cypher):
    key = RSA.PrivateKey(p, q, e)
    assert key.n == n
    assert key.d == d
    encrypter_priv = RSA.IntegerEncrypter(key)
    encrypter_pub = RSA.IntegerEncrypter(key.public())
    decrypter = RSA.IntegerDecrypter(key)
    assert (encrypter_priv.encrypt(plain) == cypher
            and encrypter_pub.encrypt(plain) == cypher
            and decrypter.decrypt(cypher) == plain)


# The list of known values has been obtained thanks to:
#  http://www.hanewin.net/encrypt/rsa/rsa-test.htm

# vim: et sw=4 ts=4 ft=python
